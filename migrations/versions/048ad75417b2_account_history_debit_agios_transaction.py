"""account + history (debit, agios, transaction)

Revision ID: 048ad75417b2
Revises: 2c90a235bd02
Create Date: 2019-10-10 12:13:18.553864

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '048ad75417b2'
down_revision = '2c90a235bd02'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('open_account_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('debit_account_agios_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('agios_check_date', sa.DateTime(), nullable=True),
    sa.Column('cashier_facility', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_daily', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('daily_agios', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debit_account_agios_history_account_id'), 'debit_account_agios_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_debit_account_agios_history_agios_check_date'), 'debit_account_agios_history', ['agios_check_date'], unique=False)
    op.create_table('paid_account_benefit_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('paid_check_date', sa.DateTime(), nullable=True),
    sa.Column('cashier_facility', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_daily', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('daily_paid', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_paid_account_benefit_history_account_id'), 'paid_account_benefit_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_paid_account_benefit_history_paid_check_date'), 'paid_account_benefit_history', ['paid_check_date'], unique=False)
    op.create_table('transaction_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operation_date', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('CREDIT', 'CREDIT_BENEFIT', 'DEBIT', 'DEBIT_AGIOS', name='typetransaction'), nullable=False),
    sa.Column('operation_amount', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_attime', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_history_account_id'), 'transaction_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_transaction_history_operation_date'), 'transaction_history', ['operation_date'], unique=False)
    op.add_column('account', sa.Column('paid_threshold', sa.Float(precision=12, asdecimal=2), nullable=True))
    op.drop_column('account', 'benefit')
    op.create_foreign_key(None, 'admin', 'user', ['id'], ['id'])
    op.create_foreign_key(None, 'client', 'user', ['id'], ['id'])
    op.create_foreign_key(None, 'client', 'manager', ['manager_id'], ['manager_id'])
    op.create_foreign_key(None, 'manager', 'user', ['id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'manager', type_='foreignkey')
    op.drop_constraint(None, 'client', type_='foreignkey')
    op.drop_constraint(None, 'client', type_='foreignkey')
    op.drop_constraint(None, 'admin', type_='foreignkey')
    op.add_column('account', sa.Column('benefit', mysql.FLOAT(), nullable=True))
    op.drop_column('account', 'paid_threshold')
    op.drop_index(op.f('ix_transaction_history_operation_date'), table_name='transaction_history')
    op.drop_index(op.f('ix_transaction_history_account_id'), table_name='transaction_history')
    op.drop_table('transaction_history')
    op.drop_index(op.f('ix_paid_account_benefit_history_paid_check_date'), table_name='paid_account_benefit_history')
    op.drop_index(op.f('ix_paid_account_benefit_history_account_id'), table_name='paid_account_benefit_history')
    op.drop_table('paid_account_benefit_history')
    op.drop_index(op.f('ix_debit_account_agios_history_agios_check_date'), table_name='debit_account_agios_history')
    op.drop_index(op.f('ix_debit_account_agios_history_account_id'), table_name='debit_account_agios_history')
    op.drop_table('debit_account_agios_history')
    op.drop_table('open_account_request')
    # ### end Alembic commands ###
