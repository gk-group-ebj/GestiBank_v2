"""INIT

Revision ID: b8f9b00227d9
Revises: 
Create Date: 2019-10-11 01:26:05.805781

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b8f9b00227d9'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('open_account_request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('request_data', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('lastname', sa.String(length=64), nullable=True),
    sa.Column('firstname', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=128), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('manager',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('mle', sa.Integer(), nullable=True),
    sa.Column('entry_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_pwd',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('manager_id', sa.Integer(), nullable=True),
    sa.Column('nb_street', sa.String(length=10), nullable=True),
    sa.Column('street', sa.String(length=250), nullable=True),
    sa.Column('city', sa.String(length=120), nullable=True),
    sa.Column('zip', sa.String(length=60), nullable=True),
    sa.Column('nb_child', sa.Integer(), nullable=True),
    sa.Column('marital_status', sa.String(length=20), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['manager_id'], ['manager.id'], ),
    sa.PrimaryKeyConstraint('id', 'client_id'),
    sa.UniqueConstraint('client_id')
    )
    op.create_index(op.f('ix_client_manager_id'), 'client', ['manager_id'], unique=False)
    op.create_table('account',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_number', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('CURRENT_ACCOUNT', 'DEBIT_ACCOUNT', 'PAID_ACCOUNT', name='typeaccount'), server_default='CURRENT_ACCOUNT', nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('iban', sa.String(length=20), nullable=True),
    sa.Column('balance', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('cashier_facility', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('paid_threshold', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('iban')
    )
    op.create_index(op.f('ix_account_account_number'), 'account', ['account_number'], unique=True)
    op.create_index(op.f('ix_account_client_id'), 'account', ['client_id'], unique=False)
    op.create_table('debit_account_agios_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('agios_check_date', sa.DateTime(), nullable=True),
    sa.Column('cashier_facility_attime', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_attime', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('daily_agios', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_debit_account_agios_history_account_id'), 'debit_account_agios_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_debit_account_agios_history_agios_check_date'), 'debit_account_agios_history', ['agios_check_date'], unique=False)
    op.create_table('paid_account_benefit_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('paid_check_date', sa.DateTime(), nullable=True),
    sa.Column('cashier_facility', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_daily', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('daily_paid', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_paid_account_benefit_history_account_id'), 'paid_account_benefit_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_paid_account_benefit_history_paid_check_date'), 'paid_account_benefit_history', ['paid_check_date'], unique=False)
    op.create_table('transaction_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('operation_date', sa.DateTime(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.Enum('CREDIT', 'CREDIT_BENEFIT', 'DEBIT', 'DEBIT_AGIOS', name='typetransaction'), nullable=False),
    sa.Column('operation_amount', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.Column('balance_attime', sa.Float(precision=12, asdecimal=2), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transaction_history_account_id'), 'transaction_history', ['account_id'], unique=False)
    op.create_index(op.f('ix_transaction_history_operation_date'), 'transaction_history', ['operation_date'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transaction_history_operation_date'), table_name='transaction_history')
    op.drop_index(op.f('ix_transaction_history_account_id'), table_name='transaction_history')
    op.drop_table('transaction_history')
    op.drop_index(op.f('ix_paid_account_benefit_history_paid_check_date'), table_name='paid_account_benefit_history')
    op.drop_index(op.f('ix_paid_account_benefit_history_account_id'), table_name='paid_account_benefit_history')
    op.drop_table('paid_account_benefit_history')
    op.drop_index(op.f('ix_debit_account_agios_history_agios_check_date'), table_name='debit_account_agios_history')
    op.drop_index(op.f('ix_debit_account_agios_history_account_id'), table_name='debit_account_agios_history')
    op.drop_table('debit_account_agios_history')
    op.drop_index(op.f('ix_account_client_id'), table_name='account')
    op.drop_index(op.f('ix_account_account_number'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_client_manager_id'), table_name='client')
    op.drop_table('client')
    op.drop_table('user_pwd')
    op.drop_table('manager')
    op.drop_table('admin')
    op.drop_table('user')
    op.drop_table('open_account_request')
    # ### end Alembic commands ###
